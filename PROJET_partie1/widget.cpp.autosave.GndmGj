#include "widget.h"
#include "ui_widget.h"
#include <QFileDialog>
#include <QFile>
#include <QTextStream>
#include <QLineEdit>

Widget::Widget(QWidget *parent)
    : QWidget(parent)
    , ui(new Ui::Widget)
{
    ui->setupUi(this);
}

Widget::~Widget()
{
    delete ui;
}


void Widget::on_pushButton_4_clicked()
{
     this->close();
}

void Widget::on_pushButton_2_clicked()
{
    // L'opération consistant à créer le fichier texte se déroule en trois
    // étapes.

    // ETAPE 1: on définit le *nom* et l'*emplacement* (répertoire) du fichier dans
    // lequel seront enregistrés notes.
    QString filename=QFileDialog::getSaveFileName(this,tr("Exporter dans un fichier texte"),"home/bureau",tr("Fichiers Textes (*.txt)"));
    // ATTENTION. filename contient le chemin absolu du fichier !

    // on instancie un objet QFile en invoquant le constructeur simple prenant
    // en argument le chemin (relatif ou absolu) du fichier que l'on souhaite
    // créer / modifier / lire.
    QFile file(filename);

    // ETAPE 2: on ouvre en écriture le fichier texte en appelant la méthode open
    // NOTE. S'il n'est pas possible d'ouvrir en écriture le fichier, la méthode retourne
    // false sinon elle retourne true
    if (!file.open(QIODevice::WriteOnly| QIODevice::Text))
        return; // en cas d'échec d'ouverture en écriture, on ne fait rien !

// ATTENTION. Un fichier ouvert en écriture ne veut pas dire qu'il est créé tant
// qu'il n'a pas été fermé à l'aide de la méthode close().

// ETAPE 3: on écrit les contenus des zones de texte dans le fichier texte,
// Pour cela, on va utiliser un objet QTextStream comme mémoire tampon pour écrire
// les notes dans le fichier texte.

// La classe QTextStream fait partie de la famille des classes appelées
// flux (std::cout est un flux en sortie)

// En particulier, il est possible d'enregistrer simplement des
// données dans un flux à l'aide de l'opérateur <<

// En utilisant le constructeur prenant en argument un pointeur QFile*,
// on pourra  écrire dans le fichier texte (objet file) à travers le flux
// out.

// Le nom du flux est libre; c'est moi qui ait choisit de l'appeler
// out pour output mais cela n'est pas obligatoire. Seulement la force
// de l'habitude !
QTextStream out(&file);

out <<  LIRE( ui->textEdit )<<  endl;
out <<  ui->textEdit_2 << endl;
out << ui->textEdit_3 << endl;


// ATTENTION. Ne jamais oublier de ferme un fichier, surtout si on est
// en train de le créer
file.close();
}
}
